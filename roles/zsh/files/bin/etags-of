#!/usr/bin/env bb
;; -*- mode: clojure; -*-
(require '[babashka.process :refer [process]])


(defn sh
  [& args]
  (println "+" (str/join " " args))
  (let [{:keys [exit out err]} (apply shell/sh args)]
    (if (not= 0 exit) (throw (Exception. err)) :ok)
    (println out)
    out))


(defn ag-g
  [pattern]
  (let [proc (process ["ag" "-g" pattern] {:in :inherit})]
    (filter #(not= "" %) (-> proc :out slurp str/split-lines))))


(defn -main
  []
  ;; rm -vf TAGS
  (if (.exists (io/file "TAGS"))
    (io/delete-file "TAGS")
    :ok)
  ;; ag -g '\.(c|cpp|erl|h|hrl|java|php|pl|py|rb|tex|y)$' | xargs -t etags -a
  (let [filenames (ag-g "\\.(c|cpp|erl|h|hrl|java|php|pl|py|rb|tex|y)$")]
    (doseq [filenames (partition-all 101 filenames)]
      (try
        (apply sh (concat ["etags" "-a"] filenames))
        (catch Exception err (println (.getMessage err)))))))


(-main)
